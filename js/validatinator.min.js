function Validatinator(e,t){if(!(this instanceof Validatinator))throw new Error("Whoops!  Validatinator must be called with the new keyword!");this.validationInformation=void 0!==e?this.utils.convertFieldValidationsToArray(e):{},this.errors={},this.currentForm,this.currentField,this.validations.parent=this,this.messages.parent=this,this.validations.utils=this.utils,this.messages.utils=this.utils,void 0!==t&&this.messages.overwriteAndAddNewMessages(t)}Validatinator.prototype={fails:function(e){return!this.startValidations(e)},passes:function(e){return this.startValidations(e)},startValidations:function(e){var t,i,r,n;this.currentForm=e,this.errors={};for(fieldName in this.validationInformation[e])for(this.currentField=fieldName,t=this.validationInformation[e][fieldName],i=this.utils.getFieldsValue(this.currentForm,this.currentField),n=0;n<t.length;n++){var a,s=[];r=this.getValidationMethodAndParameters(t[n]),a=r[0],2===r.length&&(s=r[1]),this.callValidationMethodWithParameters(a,s,i)||(s.shift(),this.messages.addValidationErrorMessage(a,s))}return this.utils.isEmptyObject(this.errors)},getValidationMethodAndParameters:function(e){var t,i;return e.contains(":")?(t=e.split(":"),i=t.shift(),[i,this.prepareParameters(t)]):[e]},prepareParameters:function(e){for(var t=0,i=0;t<e.length;t++)if(e[t].contains(","))for(e[t]=e[t].split(",");i<e[t].length;i++)e[t][i]=this.utils.convertStringToBoolean(e[t][i].trim());else e[t]=this.utils.convertStringToBoolean(e[t].trim());return e},callValidationMethodWithParameters:function(e,t,i){if(!(e in this.validations))throw new Error("Validation does not exist: "+e);return t?(t.unshift(i),this.validations[e].apply(this.validations,t)):this.validations[e](i)}},"object"==typeof window&&"object"==typeof window.document&&(window.Validatinator=Validatinator),Validatinator.prototype.messages={validationMessages:{accepted:"This field must be accepted.",alpha:"This field only allows alpha characters.",alphaDash:"This field only allows alpha, dash and underscore characters.",alphaNum:"This field only allows alpha, dash, underscore and numerical characters.",between:"This field must be between {$0}",betweenLength:"This field must be between {$0} characters long.",confirmed:"This field must be the same as {$0}.",contains:"This field must be one of the following values, {$0}.",dateBefore:"This field must be a date before {$0}.",dateAfter:"This field must be a date after {$0}.",different:"This field must not be the same as {$0}.",digitsLength:"This field must be a numerical value and {$0} characters long.",digitsLengthBetween:"This field must be a numerical value and between {$0} characters long.",email:"This field only allows valid email addresses.",ipvFour:"This field only allows valid ipv4 addresses.",max:"This field must be equal to or less than {$0}.",maxLength:"This field must be {$0} or less characters long.",min:"This field must be equal to or more than {$0}.",minLength:"This field must be {$0} or more characters long.",notIn:"This field must not be contained within the following values, {$0}.",number:"This field only allows valid numerical values.",required:"This field is required.",requiredIf:"This field is required if the value of {$0} equals {$1}.",requiredIfNot:"This field is required if the value of {$0} does not equal {$1}.",same:"This field must be the same value as {$0}.",url:"This field only allows valid urls."},overwriteAndAddNewMessages:function(e){var t;for(t in e)this.validationMessages[t]=e[t]},addCurrentFormAndField:function(){this.parent.errors.hasOwnProperty(this.parent.currentForm)||(this.parent.errors[this.parent.currentForm]={}),this.parent.errors[this.parent.currentForm].hasOwnProperty(this.parent.currentField)||(this.parent.errors[this.parent.currentForm][this.parent.currentField]={})},addValidationErrorMessage:function(e,t){var i=this.parent.currentForm,r=this.parent.currentField,n=this.getValidationErrorMessage(e);this.addCurrentFormAndField(),t.length>0&&(n=this.replaceCurlyBracesWithValues(n,t)),this.parent.errors[i][r][e]=n},getValidationErrorMessage:function(e){var t,i=this.parent.currentForm,r=this.parent.currentField;try{t=this.validationMessages[i][r][e]}catch(n){}return t||(t=this.validationMessages[e]),t},replaceCurlyBracesWithValues:function(e,t){for(var i,r,n=0;n<t.length;n++)i=t[n],r="{$"+n+"}",(e.contains(r)||null!==i||void 0!==i)&&(e=this.utils.isValueAnArray(t[n])?e.split(r).join(this.utils.convertArrayValuesToEnglishString(i)):e.split(r).join(i));return e}},String.prototype.contains||(String.prototype.contains=function(e,t){return-1!==String.prototype.indexOf.call(this,e,t)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e,t){if(void 0===this||null===this)throw new TypeError('"this" is null or not defined');var i=this.length>>>0;for(t=+t||0,Math.abs(t)===1/0&&(t=0),0>t&&(t+=i,0>t&&(t=0));i>t;t++)if(this[t]===e)return t;return-1}),Validatinator.prototype.utils={convertFieldValidationsToArray:function(e){var t;for(formName in e)for(fieldName in e[formName])t=e[formName][fieldName],e[formName][fieldName]=t.contains("|")?t.split("|"):[t];return e},convertStringToBoolean:function(e){return"string"!=typeof e?e:"false"===e.toLowerCase()?!1:"true"===e.toLowerCase()?!0:e},convertArrayValuesToEnglishString:function(e){for(var t,i=0,r="";i<e.length;i++)t=i+1,r+=t===e.length?" and "+e[i]:0===i?e[i]:", "+e[i];return r},isValueFalsyInNature:function(e,t){return(void 0===t||null===t)&&(t=!0),void 0===e||null===e||""===e?!0:t?!e:e===!1},isValueAnArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},getFieldsValue:function(e,t){var i,r,n,a=0;for(i=document.getElementsByName(t);a<i.length;a++)if(n=i[a],n.form.name===e){r=n.value;break}if(!r&&""!==r)throw new Error("Couldn't find the field element "+t+" for the form "+e+".");return r}},Validatinator.prototype.validations={accepted:function(e){return document.getElementsByName(this.parent.currentField)[0].checked},alpha:function(e){var t=/^[a-zA-Z]+$/;return this.utils.isValueFalsyInNature(e)?!1:t.test(e)},alphaDash:function(e){var t=/^[a-zA-Z-_]+$/;return this.utils.isValueFalsyInNature(e)?!1:t.test(e)},alphaNum:function(e){var t=/^[a-zA-Z-_0-9]+$/;return this.utils.isValueFalsyInNature(e)?!1:t.test(e)},between:function(e,t){var i=Number(t[0]),r=Number(t[1]);if(isNaN(i)||isNaN(r))throw new Error("min and max must both be numbers in the `between` validation.");return e>=i&&r>=e},betweenLength:function(e,t){var i=Number(t[0]),r=Number(t[1]),n=String(e).length;if(isNaN(i)||isNaN(r))throw new Error("min and max must both be numbers in the `betweenLength` validation.");return n>=i&&r>=n},contains:function(e,t){return-1!==t.indexOf(e)},dateBefore:function(e,t){return Date.parse(e)<Date.parse(t)},dateAfter:function(e,t){return!this.dateBefore(e,t)},different:function(e,t,i){return!this.same(e,t,i)},digitsLength:function(e,t){var i=String(e).length,t=Number(t);if(isNaN(t))throw new Error("length must be of numerical value in the `digitsLength` validation.");return this.number(e)?i===t:!1},digitsLengthBetween:function(e,t){var i=Number(t[0]),r=Number(t[1]),n=String(e).length;if(isNaN(i)||isNaN(r))throw new Error("minLength and maxLength must both be numerical values in the `digitsLengthBetween` validation.");return this.number(e)?n>=i&&r>=n:!1},email:function(e){var t=/^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,10})+$/;return t.test(e)},ipvFour:function(e){var t,i=255;return t=e.match(/^(\d+)\.(\d+)\.(\d+)\.(\d+)$/),null!==t&&t[1]<=i&&t[2]<=i&&t[3]<=i&&t[4]<=i},max:function(e,t){if(t=Number(t),isNaN(t))throw new Error("max must be of numerical value in the `max` validation.");return this.between(e,[-(1/0),t])},maxLength:function(e,t){if(t=Number(t),isNaN(t))throw new Error("max must be a numerical value in the `max` validation.");return this.betweenLength(e,[-(1/0),t])},min:function(e,t){if(t=Number(t),isNaN(t))throw new Error("min must be of numerical value in the `min` validation.");return this.between(e,[t,1/0])},minLength:function(e,t){if(t=Number(t),isNaN(t))throw new Error("min must be a numerical value in the `minLength` validation.");return this.betweenLength(e,[t,1/0])},notIn:function(e,t){return!this.contains(e,t)},number:function(e){return null===e||void 0===e?!1:(e=Number(e),!isNaN(e))},required:function(e){return!this.utils.isValueFalsyInNature(e,!1)},_required_if:function(e,t,i,r){var n=this.utils.getFieldsValue(this.parent.currentForm,t);return r&&n!==i||!r&&n===i?this.required(e):!0},requiredIf:function(e,t,i){return this._required_if(e,t,i,!1)},requiredIfNot:function(e,t,i){return this._required_if(e,t,i,!0)},same:function(e,t,i){var r=this.utils.getFieldsValue(this.parent.currentForm,t);return(void 0===i||null===i)&&(i=!0),e=String(e),r=String(r),i?e===r:e.toLowerCase()===r.toLowerCase()},url:function(e){var t=/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/;return t.test(e)}};